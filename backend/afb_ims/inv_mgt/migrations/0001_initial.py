# Generated by Django 3.2.23 on 2023-11-22 03:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100)),
                ('product_name', models.CharField(max_length=200, unique=True)),
                ('category', models.TextField(blank=True, null=True)),
                ('qty_per_order', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billno', models.CharField(max_length=100)),
                ('time', models.DateTimeField(auto_now=True)),
                ('grand_total', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='SalesBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billno', models.CharField(max_length=100, unique=True)),
                ('time', models.DateTimeField(auto_now=True)),
                ('customer_name', models.CharField(max_length=200)),
                ('remarks', models.CharField(max_length=100)),
                ('grand_total', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('stock_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('unit', models.CharField(max_length=200)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('address', models.TextField()),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SalesItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('sale_date', models.DateTimeField(auto_now_add=True)),
                ('sub_total', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('billno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sales_items', to='inv_mgt.salesbill')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inv_mgt.product')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('quantity_purchased', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('item_price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('sub_total', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('purchaseBill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inv_mgt.purchasebill')),
                ('stock_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_items', to='inv_mgt.stock')),
            ],
        ),
        migrations.AddField(
            model_name='purchasebill',
            name='supplier_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bills', to='inv_mgt.supplier'),
        ),
        migrations.AddField(
            model_name='product',
            name='stock_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inv_mgt.stock'),
        ),
    ]
